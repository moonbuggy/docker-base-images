# shellcheck shell=bash disable=SC2034

SOURCE_REPO='alpine'
ARCH_YAML="hooks/arch.alpine.yaml"

NO_QEMU=1

CACHE_EXPIRY=604800

declare -A BUILD_ARGS=( \
	[S6_ARCH]='S6 arch' \
	[S6_VERSION]='S6 version' \
	[ALPINE_VERSION]='Alpine version' \
	[TARGET_ARCH_TAG]='Target arch' \
	[APK_PROXY]='APK proxy' \
)

declare -A CHECKOUT_DISPLAY=( \
	[ALPINE_VERSION]='Alpine version' \
	[SOURCE_LATEST]='Alpine latest' \
	[ALPINE_MINOR_LATEST]='Alpine minor latest' \
	[S6_SOURCE]='S6 source' \
	[S6_REASON]='S6 source reason' \
	[APK_PROXY]='APK proxy' \
)

post_checkout_start () {
	echo "Fetching source repo tags.."
	eval_param_ifn 'SOURCE_REPO_TAGS' \
		"docker_api_repo_tags ${SOURCE_REPO} | xargs -n1 | grep -Eo '(^[0-9]*\\\.[\\\.0-9]*)' | sort -uV"
	eval_param_ifn 'SOURCE_LATEST' "echo '${SOURCE_REPO_TAGS}' | xargs -n1 | tail -n1"

	[[ "${DOCKER_TAG}" =~ ^[0-9] ]] \
		&& TARGET_VERSION="${DOCKER_TAG%-*}" \
		|| TARGET_VERSION="${SOURCE_LATEST}"

	eval_param 'ALPINE_VERSION' "search_repo_tags ${TARGET_VERSION} ${SOURCE_REPO_TAGS}"
	eval_param 'ALPINE_MINOR' "parse_version_minor ${ALPINE_VERSION}"
	eval_param 'ALPINE_MINOR_LATEST' "search_repo_tags ${ALPINE_MINOR} ${SOURCE_REPO_TAGS}"

	unset EXCLUDED_ARCHES
	unset DOCKERFILE_OVERRIDE
	unset S6_REASON

	# always use moonbuggy2000/s6 for current major versions, to ensure we have
	# the same s6 version across all builds (the APK will be older than s6 in the
	# just-containers/s6-overlay repo)
	S6_SOURCE="moonbuggy2000/s6-overlay"
	S6_VERSION="latest"
	DOCKERFILE_OVERRIDE="Dockerfile.no_apk"

	# if s6-overlay isn't available via apk for the Alpine version then we need to
	# install it from the moonbuggy2000/s6 images on Docker HUb
	# add_param "$(alpine_package_version s6-overlay "${ALPINE_VERSION}")" 'S6_APK_VERSION'
	# case "${S6_APK_VERSION}" in
	# 	3*)
	# 		S6_VERSION="${S6_APK_VERSION}"
	# 		S6_SOURCE="Alpine apk"
	# 		S6_REASON=""
	# 		;;
	# 	2*) S6_REASON="APK is less than v3" ;;&
	# 	"") S6_REASON="s6-overlay APK not found" ;;&
	# 	*)
	# 		S6_SOURCE="moonbuggy2000/s6-overlay"
	# 		S6_VERSION="latest"
	# 		DOCKERFILE_OVERRIDE="Dockerfile.no_apk"
	# 		;;
	# esac

	add_param "${S6_VERSION}" 'S6_VERSION'
	add_param "${S6_REASON}" 'S6_REASON'
	add_param "${S6_SOURCE:-Alpine repo}" 'S6_SOURCE'

	TARGET_TAG="${ALPINE_VERSION}"
	SOURCE_TAG="${ALPINE_VERSION}"
}

get_base_tags() {
	local extra_tags && extra_tags=()

	case "${ALPINE_VERSION}" in
		"${ALPINE_MINOR_LATEST}") extra_tags+=("${ALPINE_MINOR}") ;;
	esac

	echo "${extra_tags[@]}"
}

## return an array of extra tags to add during post_push
get_manifest_tags () {
	local extra_tags=() && extra_tags=("$(get_base_tags)")

	case "${ALPINE_VERSION}" in
		"${SOURCE_LATEST}") extra_tags+=('latest') ;;
	esac

	echo "${extra_tags[@]}"
}
