SOURCE_REPO='alpine'
S6_REPO="just-containers/s6-overlay"

ARCH_KEYS='TARGET_ARCH_TAG EXTRA_ARCH_TAGS QEMU_ARCH S6_ARCH QEMU_PREFIX DOCKER_FILE'
EXCLUDED_ARCHES='s390x'

CACHE_EXPIRY=14400

declare -A BUILD_ARGS=( \
	[S6_ARCH]='S6 arch' \
	[S6_VERSION]='S6 version' \
	[ALPINE_VERSION]='Alpine version' \
)

## get the image for the Dockerfile FROM 
#
get_from_image () {	echo "${QEMU_PREFIX}/${SOURCE_IMAGE}";	}

## get the source tag
#
get_source_tag () {	echo "${TARGET_TAG}";	}

## run at the end of post_checkout
#
post_checkout_end () {
	add_print_param "$(docker_api_latest "library/${SOURCE_REPO}")" 'SOURCE_LATEST' 'Latest source tag'
	add_print_param "$(git_latest_release "${S6_REPO}")" 'S6_VERSION' 'Latest S6 tag'

	add_print_param "${TARGET_TAG}" 'ALPINE_VERSION' 'Alpine version'
}

## return an array of extra tags to add during post_push
#
get_manifest_tags () {
	shopt -s extglob
	extra_tags=()

	# the most recent Alpine minor versions
	latest_alpine_minor=+"(3.7.3|3.8.5|3.9.6|3.10.5|3.11.6|3.12.3|${SOURCE_LATEST})"

	# these are the last releases for a minor version
	# shellcheck disable=SC2053
	[[ "${TARGET_TAG}" = ${latest_alpine_minor} ]] && extra_tags+=("${TARGET_TAG%.*}")

	[ "${TARGET_TAG}" = "${SOURCE_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
