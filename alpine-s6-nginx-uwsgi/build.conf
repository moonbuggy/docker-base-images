SOURCE_REPO="moonbuggy2000/alpine-s6-nginx"

NO_QEMU=1

## run at the start of post_checkout
post_checkout_start () {
	case "${DOCKER_TAG}" in
		1.12*)
			ALPINE_VERSION='3.7'
			NGINX_VERSION='1.12'
			;;
		1.14*)
			ALPINE_VERSION='3.9'
			NGINX_VERSION='1.14'
			;;
		1.16*)
			ALPINE_VERSION='3.11'
			NGINX_VERSION='1.16'
			;;
		1.18*|*)
			ALPINE_VERSION='3.12'
			NGINX_VERSION='1.18'
			;;
	esac
	add_param "${ALPINE_VERSION}" 'ALPINE_VERSION'
	add_param "${NGINX_VERSION}" 'NGINX_VERSION'

	[ -z "${SOURCE_LATEST}" ] && SOURCE_LATEST="$(docker_api_repo_tags "${SOURCE_REPO}" | grep -oP '(?<=nginx)([0-9.]*)' | sort -uV | tail -n1)"
	add_param "${SOURCE_LATEST}" 'SOURCE_LATEST'

	add_param "${NGINX_VERSION}" 'TARGET_TAG'
	add_param "${TARGET_TAG}" 'SOURCE_TAG'
}

## return a list of base tags to add during push
get_base_tags () { echo "${TARGET_TAG} alpine${ALPINE_VERSION} ${TARGET_TAG}-alpine${ALPINE_VERSION}"; }

## return a list of extra tags to add during post_push
get_manifest_tags () {
	local extra_tags
	extra_tags=("nginx${NGINX_VERSION}" "alpine${ALPINE_VERSION}")
	[ "${NGINX_VERSION}" = "${SOURCE_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
