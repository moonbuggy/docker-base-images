# shellcheck shell=bash disable=SC2034

SOURCE_REPO="moonbuggy2000/alpine-s6-nginx"
ARCH_YAML="hooks/arch.alpine.yaml"

NO_QEMU=1

declare -A CHECKOUT_DISPLAY=( \
	[ALPINE_VERSION]='Alpine version' \
	[SOURCE_LATEST]='Nginx latest' \
	[NGINX_VERSION]='Nginx version' \
)

## run at the start of post_checkout
post_checkout_start () {
	# get source repo tags
	eval_param_ifn 'SOURCE_REPO_TAGS' "docker_api_repo_tags ${SOURCE_REPO}"

	# find latest Nginx version in source repo
	eval_param_ifn 'SOURCE_LATEST' \
		"echo '${SOURCE_REPO_TAGS}' | xargs -n1 | grep -oP '^([0-9.]*)(?=-alpine.*)' | sort -uV | tail -n1"

	# use an Nginx version from DOCKER_TAG, if available
	NGINX_VERSION="$(echo ${DOCKER_TAG} | grep -oP '^[0-9.]*')"

	# default to latest Nginx if not
	eval_param 'NGINX_VERSION' \
		"echo ${SOURCE_REPO_TAGS} | xargs -n1 | grep -oP '^(${NGINX_VERSION:-${SOURCE_LATEST}}[0-9.]*)(?=-alpine.*)' | sort -uV | tail -n1"

	eval_param 'NGINX_MINOR' "parse_version_minor ${NGINX_VERSION}"
	eval_param 'NGINX_MINOR_LATEST' "search_repo_tags ${NGINX_MINOR}"

	# get the latest Alpine version that provides the Nginx version
	# needed for build, used to generate tags
	eval_print_param 'ALPINE_VERSION' \
		"echo ${SOURCE_REPO_TAGS} | xargs -n1 | grep -oP '^${NGINX_VERSION}-alpine\\\K[0-9\.]*' | sort -uV | tail -n1"
	eval_param 'ALPINE_MINOR' "parse_version_minor ${ALPINE_VERSION}"

	TARGET_TAG="${NGINX_VERSION}-alpine${ALPINE_VERSION}"
	SOURCE_TAG="${NGINX_VERSION}"
}

## output a list of extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=("${NGINX_VERSION}")
	case ${NGINX_VERSION} in
		"${SOURCE_LATEST}")
			extra_tags+=('latest')
			;;&
		"${NGINX_MINOR_LATEST}")
			extra_tags+=("${NGINX_MINOR}" "alpine${ALPINE_MINOR}")
			;;
	esac

	# [ "${NGINX_VERSION}" = "${SOURCE_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
