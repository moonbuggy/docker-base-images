# shellcheck shell=bash disable=SC2034

SOURCE_REPO='moonbuggy2000/debian-slim-s6'

EXCLUDED_ARCHES='arm armv5 armv7'

PYPY_LATEST='7.3.9'
PYTHON_LATEST='3.9'

BUILD_BUILDX='true'

declare -A BUILD_ARGS=( \
	[PYPY_VERSION]='Pypy version' \
	[PYPY_PACKAGE]='Pypy package' \
	[PYTHON_VERSION]='Python version' \
	[TARGET_ARCH_TAG]='Target arch' \
)

declare -A CHECKOUT_DISPLAY=( \
	[PYPY_VERSION]='Pypy version' \
	[PYPY_PACKAGE]='Pypy package' \
	[PYTHON_VERSION]='Python version' \
)

post_checkout_start () {
	[ -z "${SOURCE_LATEST}" ] \
		&& SOURCE_LATEST="$(docker_api_latest "${SOURCE_REPO}")"
	add_param "${SOURCE_LATEST}" 'source_latest'

	SOURCE_TAG="${SOURCE_LATEST}"

	PYTHON_VERSION="$(echo "${DOCKER_TAG%-*}" | grep -oP '^[0-9.]*')"
	[ -z "${PYTHON_VERSION}" ] && PYTHON_VERSION="${PYTHON_LATEST}"

	# PyPy v7.3.1 is the last that supports ppc64le
	# data from https://downloads.python.org/pypy/
	case "${PYTHON_VERSION}" in
		# 2*)
		# 	PYPY_PACKAGE='pypy'
		# 	PYPY_VERSION="7.3.1"
		# 	;;
		3*)
			PYPY_PACKAGE='pypy3'
			PYPY_VERSION="${PYPY_LATEST}"
			;;&
		3.5)
			PYPY_VERSION='7.0.0'
			EXCLUDED_ARCHES+=' arm64v8'
			# requires libffi.so.6, not available in bullseye repo
			SOURCE_TAG="10"
			;;
		3.6)
			PYPY_VERSION='7.3.1'
			;;
		2*|3.7|3.8|3.9)
			PYPY_VERSION='7.3.9'
			EXCLUDED_ARCHES+=' ppc64le'
			;;
	esac
	add_param "${PYTHON_VERSION}" 'PYTHON_VERSION'

	PYPY_VERSION_FROM_TAG="$(echo "${DOCKER_TAG}" | grep -oP '(?<=pypy)[0-9.]*')"
	[ -n "${PYPY_VERSION_FROM_TAG}" ] && PYPY_VERSION="${PYPY_VERSION_FROM_TAG}"
	[ -z "${PYPY_VERSION}" ] && PYPY_VERSION="${PYPY_LATEST}"
	add_param "${PYPY_VERSION}" 'PYPY_VERSION'
	add_param "${PYPY_PACKAGE}" 'PYPY_PACKAGE'

	TARGET_TAG="${PYTHON_VERSION}-pypy${PYPY_VERSION}"
}

## get base tags
get_base_tags () {
	local tags && tags=("${PYTHON_VERSION}")
	echo "${tags[@]}"
}

## return an array of extra tags to add during post_push
get_manifest_tags () {
	local tags && tags=("${PYTHON_VERSION}")
	echo "${tags[@]}"
}
