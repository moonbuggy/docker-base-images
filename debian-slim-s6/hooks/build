#! /usr/bin/env bash

. hooks/env

LATEST_S6_TAG="$(get_api_data ${S6_REPO} "releases/latest" | sed -rn 's/.*"tag_name"\W+"([^"]+)".*/\1/p')"
LATEST_QEMU_TAG="$(get_api_data "${QEMU_REPO}" "releases/latest" | sed -rn 's/.*"tag_name"\W+"([^"]+)".*/\1/p')"

for arch in ${arches}; do
	for key in ${available_keys}; do
		var="${arch}_${key}"
		declare "${key}=${!var}"
	done

	echo "--- build (${arch}) ---"
	[[ "$EXCLUDE_RELEASE" == *"${DEB_RELEASE}"* ]] && \
		printf "Exluded: %s-%s\n\n" "${DEB_RELEASE}" "${TARGET_TAG}" && \
		continue

	print_param 'debian release:' "${DEB_RELEASE}"
	print_param 'QEMU arch:' "${QEMU_ARCH}"
	print_param 'S6 arch:' "${S6_ARCH}"
	print_param 'source arch:' "${SOURCE_ARCH}"
	print_param 'dockerfile ext:' "${DOCKERFILE_EXT}"
	print_param 'manifest platforms:' "${PLATFORMS}"
	print_param 'latest S6: ' "${LATEST_S6_TAG}"
	print_param 'latest QEMU: ' "${LATEST_QEMU_TAG}"
	echo

	arg_string=''

	[ -n "${DEB_RELEASE}" ] && arg_string="${arg_string} --build-arg DEB_RELEASE=${DEB_RELEASE}"
	[ -n "${LATEST_S6_TAG}" ] && arg_string="${arg_string} --build-arg S6_VERSION=${LATEST_S6_TAG}"
	[ -n "${S6_ARCH}" ] && arg_string="${arg_string} --build-arg S6_ARCH=${S6_ARCH}"

	arg_string="${arg_string} --build-arg SOURCE_IMAGE=${SOURCE_ARCH}/debian:${DEB_RELEASE}-slim"

	[ -n "${QEMU_ARCH}" ] && \
		arg_string="${arg_string} --build-arg QEMU_ARCH=${QEMU_ARCH}" && \
		arg_string="${arg_string} -f Dockerfile.${DOCKERFILE_EXT}"

	build_cmd=(docker build ${arg_string} -t ${DOCKER_REPO}:${DEB_RELEASE}-${TARGET_TAG} .)
	pretty_build_cmd=$(echo "${build_cmd[*]}" | sed -r -e "s/(--build-arg|-f|-t)/\\\ \n\t\1/g")

	echo '--- build command ---'
	printf '%s\n\n' "$pretty_build_cmd"

	"${build_cmd[@]}"
	echo 
done
