#! /usr/bin/env bash

. hooks/env

for arch in ${valid_arches}; do
	for key in ${available_keys}; do
		var="${arch}_${key}"
		declare "${key}=${!var}"
	done

	echo "--- build (${arch}) ---"

	FROM_IMAGE="${QEMU_PREFIX}/${SOURCE_IMAGE}"

	print_param 'Source image' "${FROM_IMAGE}"
	print_param 'Target tag' "${TARGET_TAG}"
	print_param 'QEMU arch' "${QEMU_ARCH}"
	print_param 'QEMU prefix' "${QEMU_PREFIX}"
	print_param 'QEMU version' "${LATEST_QEMU_TAG}"
	print_param 'S6 version' "${LATEST_S6_TAG}"
	print_param 'Dockerfile' "${DOCKER_FILE}"
	echo

	arg_string=''

	[ -n "${TARGET_TAG}" ] && arg_string="${arg_string} --build-arg TARGET_TAG=${TARGET_TAG}"
	[ -n "${LATEST_S6_TAG}" ] && arg_string="${arg_string} --build-arg S6_VERSION=${LATEST_S6_TAG}"
	[ -n "${S6_ARCH}" ] && arg_string="${arg_string} --build-arg S6_ARCH=${S6_ARCH}"

	arg_string="${arg_string} --build-arg FROM_IMAGE=${FROM_IMAGE}"

	[ -n "${QEMU_ARCH}" ] && \
		arg_string="${arg_string} --build-arg QEMU_ARCH=${QEMU_ARCH}" && \
		arg_string="${arg_string} -f ${DOCKER_FILE}"

	build_cmd=(docker build ${arg_string} -t ${DOCKER_REPO}:${TARGET_TAG}-${TARGET_ARCH_TAG} .)
	pretty_build_cmd=$(echo "${build_cmd[*]}" | sed -r -e "s/(--build-arg|-f|-t)/\\\ \n\t\1/g")

	echo '--- build command ---'
	printf '%s\n\n' "$pretty_build_cmd"

	"${build_cmd[@]}"
	echo 
done
