# shellcheck shell=bash disable=SC2034

SOURCE_REPO="debian"
ARCH_YAML="hooks/arch.debian.yaml"
BUILD_MULTIARCH="true"
NO_QEMU=1

# mips64le disappears from the buildx environment somehow
EXCLUDED_ARCHES="mips64le "

declare -A BUILD_ARGS=( \
	[S6_ARCH]='S6 arch' \
	[S6_VERSION]='S6 version' \
	[DEBIAN_RELEASE]='Debian release' \
	[DEBIAN_VERSION]='Debian version' \
)

declare -A CHECKOUT_DISPLAY=( \
	[DEBIAN_RELEASE]='Debian release' \
	[DEBIAN_VERSION]='Debian version' \
	[DEBIAN_LATEST]='Debian latest' \
	[DEBIAN_MAJOR]='Debian major version' \
	[DEBIAN_MAJOR_LATEST]='Debian major latest' \
)

post_checkout_start () {
	echo "Fetching source repo tags.."
	eval_param_ifn 'SOURCE_REPO_TAGS' \
		"docker_api_repo_tags ${SOURCE_REPO} | grep -oP '^[0-9]*[\.-][0-9]+(?=-slim)'"

	eval_param 'DEBIAN_LATEST' "echo '${SOURCE_REPO_TAGS}' | xargs -n1 | sort -uV | tail -n1"

	# get Debian version from DOCKER_TAG, default to latest release
	# shellcheck disable=SC2154
	if [[ "${DOCKER_TAG}" =~ ^[0-9.] ]]; then
		DEBIAN_VERSION="${DOCKER_TAG%-*}"
		DEBIAN_MAJOR="${DOCKER_TAG%.*}"
	elif [[ "${debian_names[*]}" =~ ${DOCKER_TAG%-*} ]]; then
		DEBIAN_VERSION="$(echo "${debian_names[@]/${DOCKER_TAG%-*}//}" | cut -d/ -f1 | wc -w)"
	else
		DEBIAN_VERSION="${DEBIAN_LATEST}"
	fi
	eval_param 'DEBIAN_VERSION' "search_repo_tags ${DEBIAN_VERSION}"

	# fail if we didn't find anything
	[ -z "${DEBIAN_VERSION}" ] \
		&& echo "Can't find Debian version from '${DOCKER_TAG%-*}', exiting." \
		&& exit 1

	add_param  "${DEBIAN_VERSION%%.*}" 'DEBIAN_MAJOR'
	eval_param 'DEBIAN_MAJOR_LATEST' "search_repo_tags ${DEBIAN_MAJOR}"

	add_param "${debian_names[${DEBIAN_MAJOR}]}" 'DEBIAN_RELEASE'

	TARGET_TAG="${DEBIAN_VERSION}"
	SOURCE_TAG="${DEBIAN_VERSION}-slim"
}

get_base_tags () {
	local extra_tags && extra_tags=("${TARGET_TAG}")

	case "${TARGET_TAG}" in
		"${DEBIAN_MAJOR_LATEST}") extra_tags+=("${DEBIAN_RELEASE}" "${DEBIAN_MAJOR}") ;;
	esac

	echo "${extra_tags[*]}"
}

## return an array of extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=()

	# pin the general <release> and <major> tags on the most recent versions
	# case "${TARGET_TAG}" in
	# 	"${DEBIAN_MAJOR_LATEST}") extra_tags+=("${DEBIAN_RELEASE}" "${DEBIAN_MAJOR}") ;;
	# esac

	# pin the general <release> and <major> tags on the most compatible versions,
	# not actually the most recent
	# shellcheck disable=SC2154
	[ "${most_arch_support#*${TARGET_TAG}}" != "${most_arch_support}" ]	\
		&& extra_tags+=("${DEBIAN_RELEASE}" "${DEBIAN_MAJOR}")

	echo "${extra_tags[*]}"
}
