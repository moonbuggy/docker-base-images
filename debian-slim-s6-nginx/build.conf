# shellcheck shell=bash disable=SC2034

SOURCE_REPO="moonbuggy2000/debian-slim-s6"
ARCH_YAML="hooks/arch.debian.yaml"
BUILD_BUILDX="true"
NO_QEMU="true"

debian_names=('null' 'buzz' 'hamm' 'woody' 'etch' 'lenny' 'squeeze' 'wheezy' 'jessie' 'stretch' 'buster' 'bullseye' 'bookworm' 'trixie')

declare -A BUILD_ARGS=( \
	[NGINX_VERSION]='Nginx version' \
	[DEBIAN_VERSION]='Debian version' \
	[TARGET_ARCH_TAG]='Target arch' \
)

declare -A CHECKOUT_DISPLAY=( \
	[DEBIAN_VERSION]='Debian version' \
	[DEBIAN_LATEST]='Debian latest' \
	[DEBIAN_MINOR_LATEST]='Debian minor latest' \
)

## run at the start of post_checkout
post_checkout_start () {
	echo "Fetching source repo tags.."
	eval_param_ifn 'SOURCE_REPO_TAGS' "docker_api_repo_tags '${SOURCE_REPO}' | grep '\\\.' | sed -En 's|^([0-9\.]+).*|\\\1|p' | sort -uV"
	SOURCE_REPO_TAGS="$(echo "${SOURCE_REPO_TAGS}" | xargs -n1)"

	add_param "$(echo "${SOURCE_REPO_TAGS}" | tail -n1)" 'DEBIAN_LATEST'

	echo "Finding source Debian versions.."
	if [[ "${DOCKER_TAG%%-*}" =~ ^[0-9.]*$ ]]; then
		DEBIAN_VERSION="${DOCKER_TAG%%-*}"
	elif [ "${debian_names[*]/${DOCKER_TAG%%-*}/}" != "${debian_names[*]}" ]; then
		for key in "${!debian_names[@]}"; do
			if [[ "${debian_names[$key]}" == "${DOCKER_TAG%%-*}" ]]; then
				DEBIAN_VERSION="${key}"
				break
			fi
		done
	else
		DEBIAN_VERSION="${DEBIAN_LATEST}"
	fi
	add_param "$(search_repo_tags ${DEBIAN_VERSION})" 'DEBIAN_VERSION'

	# get x major version
	add_param "$(parse_version_major ${DEBIAN_VERSION})" 'DEBIAN_MAJOR'
	add_param "$(search_repo_tags "${DEBIAN_MAJOR}")" 'DEBIAN_MAJOR_LATEST'

	# get x.y minor version
	add_param "$(parse_version_minor ${DEBIAN_VERSION})" 'DEBIAN_MINOR'
	add_param "$(search_repo_tags "${DEBIAN_MINOR}")" 'DEBIAN_MINOR_LATEST'

	add_param "${debian_names[${DEBIAN_MAJOR}]}" 'DEBIAN_RELEASE'

	echo "Finding source Nginx versions.."
	add_param "$(debian_package_version "nginx" "${DEBIAN_RELEASE}")" 'NGINX_VERSION'
	add_param "$(parse_version_minor ${NGINX_VERSION})" 'NGINX_MINOR'
}

get_target_tag () { echo "${NGINX_VERSION}"; }

## get the source tag
get_source_tag () { echo "${DEBIAN_VERSION}"; }

get_base_tags () {
	local extra_tags && extra_tags=("${NGINX_VERSION%%-*}"  "${NGINX_MINOR}")
	echo "${extra_tags[@]}"
}

## extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=$(get_base_tags)
	[ "${NGINX_VERSION}" = "${NGINX_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
