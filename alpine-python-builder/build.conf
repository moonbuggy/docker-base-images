# shellcheck shell=bash disable=SC2034

SOURCE_REPO='python'
ARCH_YAML='hooks/arch.alpine.yaml'
CACHE_EXPIRY=604800
MINIMUM_ALPINE_VERSION='3.18'

declare -A BUILD_ARGS=( \
	[PYTHON_VERSION]='Python version' \
	[PYTHON_LATEST]='Python latest' \
	[PYPI_INDEX]='PyPi index' \
	[ALPINE_VERSION]='Alpine version' \
	[APK_PROXY]='APK proxy' \
)

declare -A CHECKOUT_DISPLAY=( \
	[PYTHON_VERSION]='Python version' \
	[PYTHON_LATEST]='Python latest' \
	[PYPI_INDEX]='PyPi index' \
	[ALPINE_VERSION]='Alpine version' \
	[APK_PROXY]='APK proxy' \
)

post_checkout_start () {
	[ -z "${PYTHON_LATEST}" ] \
		&& PYTHON_LATEST="$(docker_api_repo_tags "${SOURCE_REPO}" \
					| grep -oP "^[0-9.]*(?=-alpine)" | sort -uV | tail -n1)"
	add_param "${PYTHON_LATEST}" 'PYTHON_LATEST'

	PYTHON_VERSION="$(echo ${DOCKER_TAG} | grep -oP '^[0-9.]*')"

	# default to latest version if none is specified
	[ -z "${PYTHON_VERSION}" ] && PYTHON_VERSION="${PYTHON_LATEST}"

	# ..which is 2.7 if only '2' has been specified
	[ "x${PYTHON_VERSION}" = 'x2' ] && PYTHON_VERSION='2.7'

	# don't care about the full version, we'll just use X.Y instead of X.Y.Z
	add_param "$(echo ${PYTHON_VERSION} | awk -F \. '{print $1"."$2}')" 'PYTHON_VERSION'

	add_param "$(docker_api_repo_tags ${SOURCE_REPO} \
				| grep -oP "^${PYTHON_VERSION}-alpine\K[0-9.]+$")" 'SOURCE_ALPINE_VERSIONS'

	# go with the lowest version number that exceeds the minimum
	for version in ${SOURCE_ALPINE_VERSIONS}; do
		if [ "${MINIMUM_ALPINE_VERSION}" \
						= "$(printf '%s\n' "${MINIMUM_ALPINE_VERSION}" "${version}" | sort -V | head -n1)" ]; then
			ALPINE_VERSION="${version}"
			break
		fi
	done

	# if we can't meet the minimum Alpine version go with the highest available
	[ -z "${ALPINE_VERSION}" ] \
		&& ALPINE_VERSION="$(echo ${SOURCE_ALPINE_VERSIONS} | xargs -n1 | tail -n1)"

	add_param "${ALPINE_VERSION}" 'ALPINE_VERSION'

	SOURCE_TAG="${PYTHON_VERSION}-alpine${ALPINE_VERSION}"
	TARGET_TAG="${SOURCE_TAG}"

	PYPI_INDEX="${PYPI_INDEX:-https://pypi.org/simple}" \
		&& add_param "${PYPI_INDEX}" 'PYPI_INDEX'
}
