# shellcheck shell=bash disable=SC2034

SOURCE_REPO="python"

DEBIAN_RELEASE='bullseye'

SOURCE_ARCH_PREFIX='true'

#BUILD_SQUASH='true'

WHEEL_REPO="moonbuggy2000/python-musl-wheels"
PYTHON_WHEELS="orderedset"

declare -A BUILD_ARGS=( \
	[BUILD_PYTHON_VERSION]='Python version' \
	[NUITKA_VERSION]='Nuitka version' \
)

declare -A CHECKOUT_DISPLAY=( \
	[PYTHON_VERSION]='Python version' \
	[PYTHON_LATEST]='Python latest' \
	[BUILD_ARCH]='Build arch' \
	[NUITKA_LATEST]='Nuitka latest' \
	[NUITKA_VERSION]='Nuitka version' \
)

case "${DOCKER_TAG}" in
	*-py[a-zA-Z0-9]*)
		PYTHON_VERSION="$(echo ${DOCKER_TAG} | grep -oP '\-py\K[0-9\.]*')"
		;;&
	*debian*)
		TARGET_BUILD='debian'
		DOCKER_FILE='Dockerfile.debian'
#		SOURCE_REPO='debian'
		SOURCE_TAG_STRING="slim-${DEBIAN_RELEASE}"
		ARCH_YAML='hooks/arch.debian.yaml'
		;;
	*alpine*|*)
		TARGET_BUILD='alpine'
#		SOURCE_REPO='alpine'
		SOURCE_TAG_STRING='alpine'
		ARCH_YAML='hooks/arch.alpine.yaml'
		EXCLUDED_ARCHES='s390x'
		;;
esac

post_checkout_start () {
	[[ ${DOCKER_TAG} =~ ^[0-9.]+\-?.*$ ]] \
		&& PYTHON_VERSION="$(echo "${DOCKER_TAG}" | cut -d'-' -f1)"

	[ -z "${PYTHON_LATEST}" ] \
		&& add_param "$(docker_api_repo_tags "${SOURCE_REPO}" \
			| grep -oP "^[0-9.]*(?=-${SOURCE_TAG_STRING})" | sort -uV | tail -n1)" 'PYTHON_LATEST'

	# default to latest version if none is specified
	PYTHON_VERSION="${PYTHON_VERSION:-$PYTHON_LATEST}"

	# don't care about the full version, we'll just use X.Y instead of X.Y.Z
	# add_param "$(echo ${PYTHON_VERSION} | awk -F \. '{print $1"."$2}')" 'BUILD_PYTHON_VERSION'
	add_param "$(parse_version_minor ${PYTHON_VERSION})" 'BUILD_PYTHON_VERSION'

	add_param "$(pypi_api_latest_version 'Nuitka')" 'NUITKA_LATEST'
	NUITKA_VERSION="${NUITKA_VERSION:-$NUITKA_LATEST}"
	add_param "${NUITKA_VERSION}" 'NUITKA_VERSION'

	if [ "x${TARGET_BUILD}" = 'xalpine' ]; then
		# # don't really need to keep these if we're building from python:alpine/debian
		# # instead of alpine or debian directly
		# case ${BUILD_PYTHON_VERSION} in
		# 	3.6*) ALPINE_VERSION='3.9' ;;
		# 	3.7*) ALPINE_VERSION='3.10' ;;
		# 	3.8*) ALPINE_VERSION='3.13' ;;
		# 	3.9*) ALPINE_VERSION='3.14' ;;
		# 	*) ALPINE_VERISON='3.14' ;;
		# esac

		[ -z "${PYTHON_WHEELS}" ] \
			&& PYTHON_WHEELS="Nuitka==${NUITKA_VERSION}"
	else
		PYTHON_WHEELS=''
	fi

	TARGET_TAG="${NUITKA_VERSION}-py${BUILD_PYTHON_VERSION}-${TARGET_BUILD}"
}

## get the source tag
get_source_tag () {
	case "${SOURCE_REPO}" in
		alpine) echo "${ALPINE_VERSION}" ;;
		debian) echo "${DEBIAN_RELEASE}-slim" ;;
		python)	echo "${BUILD_PYTHON_VERSION}-${SOURCE_TAG_STRING}" ;;
	esac
}

get_base_tags () {
	[ "x${NUITKA_VERSION}" = "x${NUITKA_LATEST}" ] \
		&& echo "py${BUILD_PYTHON_VERSION}-${TARGET_BUILD}"
}

## extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=()

	[ "x${NUITKA_VERSION}" = "x${NUITKA_LATEST}" ] \
		&& extra_tags+=("py${BUILD_PYTHON_VERSION}-${TARGET_BUILD}")

	if [ "x${PYTHON_VERSION}" = "x${PYTHON_LATEST}" ]; then
		extra_tags+=("${NUITKA_VERSION}-${TARGET_BUILD}")
		[ "x${TARGET_BUILD}" = "xalpine" ] \
			&& extra_tags+=("${NUITKA_VERSION}")
	fi

	echo "${extra_tags[@]}"
}
