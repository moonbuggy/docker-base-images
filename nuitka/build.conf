SOURCE_REPO="python"

ARCH_KEYS="TARGET_ARCH_TAG EXTRA_ARCH_TAGS QEMU_ARCH QEMU_PREFIX DOCKER_FILE"

PYTHON_VERSION='3.8'

TARGET_BUILD='alpine'
DEBIAN_RELEASE='buster'

LATEST_DEBIAN_RELEASE='buster'

#LATEST_TAG='3.8-alpine'

declare -A BUILD_ARGS=( \
	[PYTHON_VERSION]='Python version' \
	[NUITKA_VERSION]='Nuitka version' \
	[QEMU_PREFIX]='QEMU prefix' \
)

declare -A CHECKOUT_DISPLAY=( \
	[PYTHON_VERSION]='Python version' \
	[DOCKERFILE_OVERRIDE]='Dockerfile' \
	[BUILD_ARCH]='Build arch' \
	[NUITKA_LATEST]='Nuitka latest version' \
	[NUITKA_VERSION]='Nuitka version' \
)

case "${DOCKER_TAG}" in
	*debian*)
		TARGET_BUILD="${DEBIAN_RELEASE}"
		DOCKERFILE_OVERRIDE='Dockerfile.debian'
#		PYTHON_VERSION='3.7'
		SOURCE_REPO='debian'
		ARCH_YAML='hooks/arch.debian.yaml'
		;;
	*alpine*|*)
		TARGET_BUILD='alpine'
#		PYTHON_VERSION='3.8'
		SOURCE_REPO='alpine'
		ALPINE_VERSION='3.13.2'
		ARCH_YAML='hooks/arch.alpine.yaml'
		EXCLUDED_ARCHES='s390x'
		;;
esac

[[ ${DOCKER_TAG} =~ ^[0-9.]+\-.*$ ]] && PYTHON_VERSION="$(echo ${DOCKER_TAG} | cut -d'-' -f1)"

# pypi_api_data <project>
pypi_api_data () {	get_url "https://pypi.org/pypi/${1}/json"; }

# pypi_api_version <project>
pypi_api_version () { pypi_api_data "${1}" | sed 's/,/,\n/g' | sed -En 's|.*"version"\W+"([^"]*)".*|\1|p'; }

env_end () {
	add_param "$(pypi_api_version Nuitka)" 'NUITKA_LATEST' # 'Nuitka latest'
	[ -z "${NUITKA_VERSION+set}" ] && NUITKA_VERSION="${NUITKA_LATEST}"
	add_param "${NUITKA_VERSION}" 'NUITKA_VERSION' # 'Nuitka version'
}

get_from_image () { echo "${SOURCE_REPO}:${SOURCE_TAG}"; }

get_target_tag () { echo "${PYTHON_VERSION}-${TARGET_BUILD}"; }

## get the source tag
get_source_tag () {
	case "${SOURCE_REPO}" in
		alpine) echo "${ALPINE_VERSION}" ;;
		debian) echo "${DEBIAN_RELEASE}-slim" ;;
		python) echo "${PYTHON_VERSION}-${TARGET_BUILD}" ;;
	esac
}

get_base_tags () { 
	local extra_tags && extra_tags=()
	
	extra_tags+=("${PYTHON_VERSION}-${TARGET_BUILD}")
	
	[ "${TARGET_BUILD}" = "${LATEST_DEBIAN_RELEASE}" ] \
		&& extra_tags+=("${PYTHON_VERSION}-debian")

	echo "${extra_tags[@]}"
}

## extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=()

	extra_tags+=("${PYTHON_VERSION}-Nuitka${NUITKA_VERSION}-${TARGET_BUILD}")

	case "${TARGET_BUILD}" in
		alpine) extra_tags+=("${PYTHON_VERSION}") ;;
		"${LATEST_DEBIAN_RELEASE}") extra_tags+=("${PYTHON_VERSION}-debian") ;;
	esac

#	[ "${DOCKER_TAG}" = "${LATEST_TAG}" ] && extra_tags+=('latest')
	
	echo "${extra_tags[@]}"
}
