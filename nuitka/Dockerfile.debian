ARG BUILD_PYTHON_VERSION="3.9"
ARG NUITKA_VERSION="0.6.16.4"
ARG DEBIAN_RELEASE="bullseye"

ARG FROM_IMAGE="python:${BUILD_PYTHON_VERSION}-${DEBIAN_RELEASE}"
#ARG FROM_IMAGE="debian:${DEBIAN_RELEASE}-slim"

## build the image
#
FROM --platform="${TARGETPLATFORM}" "${FROM_IMAGE}"

ARG BUILD_PYTHON_VERSION

RUN apt-get update \
	&& apt-get install -qy --no-install-recommends \
		cargo \
		ccache \
		chrpath \
		clang \
		libffi-dev \
#		python3-dev \
#		python3-pip \
#		python3-wheel \
		rustc \
		subversion

# version check in case we accidentally upgraded Python along the way
RUN _pyver="$(python --version | sed -En 's|Python\s+([0-9.]*)|\1|p' | awk -F \. '{print $1"."$2}')" \
	&& if [ "x${_pyver}" != "x${BUILD_PYTHON_VERSION}" ]; then \
		echo "ERROR: Python reports version ${_pyver}, doesn't match build version ${BUILD_PYTHON_VERSION}"; \
		echo "Exiting"; exit 1; fi

ARG BUILDER_ROOT="/builder-root"
WORKDIR "${BUILDER_ROOT}"

ENV	VIRTUAL_ENV="${BUILDER_ROOT}/venv" \
		PYTHONUNBUFFERED="1" \
		PYTHONDONTWRITEBYTECODE="1" \
		MAKEFLAGS="-j$(nproc)"

ARG PYPI_INDEX="https://pypi.org/simple"
RUN printf '%s\n' '[global]' "  index-url = ${PYPI_INDEX}" \
	"  trusted-host = $(echo "${PYPI_INDEX}" | cut -d'/' -f3 | cut -d':' -f1)" \
	> /etc/pip.conf

RUN python -m pip install --upgrade virtualenv

RUN python -m virtualenv --download "${VIRTUAL_ENV}"

# activate virtual env
ENV PATH="${VIRTUAL_ENV}/bin:$PATH"

ARG NUITKA_VERSION=""
ENV LIBSODIUM_MAKE_ARGS="-j4"

RUN python3 -m pip install --no-cache-dir --upgrade pip \
	&& python3 -m pip install --no-cache-dir \
		nuitka=="${NUITKA_VERSION}"
		# orderedset

ENTRYPOINT ["python3","-m","nuitka"]
