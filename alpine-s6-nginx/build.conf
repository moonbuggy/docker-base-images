SOURCE_REPO="moonbuggy2000/alpine-s6"

NGINX_LATEST='1.18'

declare -A BUILD_ARGS=( \
	[NGINX_VERSION]='Nginx version' \
	[ALPINE_VERSION]='Alpine version' \
	[TARGET_ARCH_TAG]='Target arch' \
)

declare -A CHECKOUT_DISPLAY=( \
	[ALPINE_VERSION]='Alpine version' \
	[ALPINE_LATEST]='Alpine latest' \
	[ALPINE_MINOR_LATEST]='Alpine minor latest' \
)

## run at the start of post_checkout
post_checkout_start () {
	case "${DOCKER_TAG}" in
		*alpine*) ALPINE_VERSION="$(echo ${DOCKER_TAG#*alpine} | grep -Po '[0-9.]*')" ;;
		1.12*) ALPINE_VERSION='3.7' ;;
		1.14*) ALPINE_VERSION='3.9' ;;
		1.16*) ALPINE_VERSION='3.11' ;;
		1.18*|latest*)	ALPINE_VERSION='3.13' ;;
		*)
			printf 'Invalid DOCKER_TAG (%s). Exiting.\n' "${DOCKER_TAG}"
			exit 1
			;;
	esac

	case "${ALPINE_VERSION}" in
		3.7*) NGINX_VERSION='1.12' ;;
		3.9*) NGINX_VERSION='1.14' ;;
		3.11*) NGINX_VERSION='1.16' ;;
		3.12*) NGINX_VERSION='1.18' ;;
		3.13*) NGINX_VERSION='1.18' ;;
		*)
			printf 'Invalid ALPINE_VERSION (%s). Exiting.\n' "${ALPINE_VERSION}"
			exit 1
			;;
	esac

	[ -z "${SOURCE_REPO_TAGS+set}" ] \
		&& SOURCE_REPO_TAGS="$(docker_api_repo_tags "${SOURCE_REPO}" | grep '\.' | sed -En 's|^([0-9\.]+).*|\1|p' | sort -uV)"
	add_param "$(echo "${SOURCE_REPO_TAGS}" | xargs)" 'SOURCE_REPO_TAGS'
	SOURCE_REPO_TAGS="$(echo "${SOURCE_REPO_TAGS}" | xargs -n1)"
	
	# get x.y.z full version
	add_param "$(search_repo_tags "${ALPINE_VERSION}")" 'ALPINE_VERSION'

	# get x major version
	add_param "$(echo ${ALPINE_VERSION} | awk -F \. '{print $1}')" 'ALPINE_MAJOR'
	add_param "$(search_repo_tags "${ALPINE_MAJOR}")" 'ALPINE_MAJOR_LATEST'

	# get x.y minor version
	add_param "$(echo ${ALPINE_VERSION} | awk -F \. '{print $1"."$2}')" 'ALPINE_MINOR'
	add_param "$(search_repo_tags "${ALPINE_MINOR}")" 'ALPINE_MINOR_LATEST'

	add_param "$(echo "${SOURCE_REPO_TAGS}" | tail -n1)" 'ALPINE_LATEST'
	add_param "${NGINX_VERSION}" 'NGINX_VERSION' "Nginx version"
}

get_target_tag () { echo "${NGINX_VERSION}-alpine${ALPINE_VERSION}"; }

## get the source tag
get_source_tag () { echo "${ALPINE_VERSION}"; }

get_base_tags () {
	local extra_tags && extra_tags=("${TARGET_TAG}" "alpine${ALPINE_VERSION}")
	if [ "${ALPINE_VERSION}" = "${ALPINE_MINOR_LATEST}" ]; then
		extra_tags+=("alpine${ALPINE_VERSION%.*}")
		[[ ( "${ALPINE_VERSION}" != "3.12"* ) ]] && extra_tags+=("${NGINX_VERSION}")
	fi
	echo "${extra_tags[@]}"
}

## extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=("$(get_base_tags)")
	[ "${ALPINE_VERSION}" = "${ALPINE_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
