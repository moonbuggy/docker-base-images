# shellcheck shell=bash disable=SC2034

SOURCE_REPO="moonbuggy2000/alpine-s6"

#NGINX_LATEST='1.18'

declare -A BUILD_ARGS=( \
	[NGINX_VERSION]='Nginx version' \
	[ALPINE_VERSION]='Alpine version' \
	[TARGET_ARCH_TAG]='Target arch' \
)

declare -A CHECKOUT_DISPLAY=( \
	[ALPINE_VERSION]='Alpine version' \
	[ALPINE_LATEST]='Alpine latest' \
	[ALPINE_MINOR_LATEST]='Alpine minor latest' \
)

# return the latest Alpine version that supports the Nginx version
#
# 'apk add nginx=~1.10' fails in Alpine 3.5, easiest to just not build it
get_alpine_version() {
	case "${1}" in
#		1.10*) echo '3.5' ;;
		1.12*) echo '3.7' ;;
		1.14*) echo '3.9' ;;
		1.16*) echo '3.11' ;;
		1.18*) echo '3.13' ;;
		1.20*) echo '3.14' ;;
		*)
			>&2 printf 'Invalid Nginx version (%s). Exiting.\n' "${1}"
			exit 1
			;;
	esac
}

## run at the start of post_checkout
post_checkout_start () {
	[ -z "${SOURCE_REPO_TAGS+set}" ] \
		&& SOURCE_REPO_TAGS="$(docker_api_repo_tags "${SOURCE_REPO}" | grep '\.' | sort -uV)"
	add_param "${SOURCE_REPO_TAGS}" 'SOURCE_REPO_TAGS'

	# latest Alpine version in source repo
	[ -z "${ALPINE_LATEST+set}" ] \
		&& ALPINE_LATEST="$(echo "${SOURCE_REPO_TAGS}" | xargs -n1 | sed -En 's|^([0-9\.]+).*|\1|p' | sort -uV | tail -n1)"
	add_param "${ALPINE_LATEST}" 'ALPINE_LATEST'

	# version information from DOCKER_TAG
	# full tag version:
	#		<nginx_version>-alpine<alpine_version>-<arch>
	# other accepted tags:
	#		latest
	#		<nginx_version>(-<arch>)
	#		alpine<alpine_version>(-<arch>)
	#
	case "${DOCKER_TAG}" in
		*alpine*)
			ALPINE_VERSION="$(echo ${DOCKER_TAG#*alpine} | grep -oP '[0-9.]*')"
			;;&
		*latest*)
			ALPINE_VERSION="${ALPINE_LATEST}"
			;;&
		*alpine*|*latest*)
			NGINX_VERSION="$(alpine_package_version 'nginx' "${ALPINE_VERSION}")"
			;;
		*)
			NGINX_VERSION="${DOCKER_TAG%%-*}"
			ALPINE_VERSION="$(get_alpine_version "${NGINX_VERSION}")"
			;;
	esac
	add_param "$(echo "${NGINX_VERSION}" | awk -F \. '{print $1"."$2}')" 'NGINX_VERSION' "Nginx version"

	# get x.y.z full version
	add_param "$(search_repo_tags "${ALPINE_VERSION}")" 'ALPINE_VERSION'

	# get x major version
	add_param "$(echo ${ALPINE_VERSION} | awk -F \. '{print $1}')" 'ALPINE_MAJOR'
	add_param "$(search_repo_tags "${ALPINE_MAJOR}")" 'ALPINE_MAJOR_LATEST'

	# get x.y minor version
	add_param "$(echo ${ALPINE_VERSION} | awk -F \. '{print $1"."$2}')" 'ALPINE_MINOR'
	add_param "$(search_repo_tags "${ALPINE_MINOR}")" 'ALPINE_MINOR_LATEST'

	TARGET_TAG="${NGINX_VERSION}-alpine${ALPINE_VERSION}"
	SOURCE_TAG="${ALPINE_VERSION}"
}

get_base_tags () {
	local extra_tags && extra_tags=("${TARGET_TAG}" "alpine${ALPINE_VERSION}")
	if [ "${ALPINE_VERSION}" = "${ALPINE_MINOR_LATEST}" ]; then
		extra_tags+=("alpine${ALPINE_MINOR}")

		[ "x${ALPINE_MINOR}" = "x$(get_alpine_version "${NGINX_VERSION}")" ] \
			&& extra_tags+=("${NGINX_VERSION}")
	fi
	echo "${extra_tags[@]}"
}

## extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=("$(get_base_tags)")
	[ "x${ALPINE_VERSION}" = "x${ALPINE_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
