SOURCE_REPO="moonbuggy2000/alpine-s6"

ARCH_KEYS="TARGET_ARCH_TAG EXTRA_ARCH_TAGS QEMU_ARCH DOCKER_FILE"

CACHE_EXPIRY=14400

NGINX_LATEST='1.18'

declare -A BUILD_ARGS=( \
	[NGINX_VERSION]='Nginx version' \
)

env_end () {
	case "${DOCKER_TAG}" in
		1.12*) ALPINE_VERSION='3.7.3' ;;
		1.14*) ALPINE_VERSION='3.9.6' ;;
		1.16*) ALPINE_VERSION='3.11.8' ;;
		1.18*|latest)	ALPINE_VERSION='3.13.2' ;;
		alpine*) ALPINE_VERSION="${DOCKER_TAG//alpine/}" ;;
	esac

	case "${ALPINE_VERSION}" in
		3.7*) NGINX_VERSION='1.12' ;;
		3.9*) NGINX_VERSION='1.14' ;;
		3.11*) NGINX_VERSION='1.16' ;;
		3.12*) NGINX_VERSION='1.18' ;;
		3.13*) NGINX_VERSION='1.18' ;;
		*)
			printf 'Invalid NGINX_VERSION (%s). Exiting.'
			exit 1
			;;
	esac
}

get_target_tag () { echo "${NGINX_VERSION}-alpine${ALPINE_VERSION}"; }

## get the source tag
get_source_tag () { echo "${ALPINE_VERSION}"; }

## run at the end of post_checkout
post_checkout_end () {
	add_print_param "${NGINX_VERSION}" 'NGINX_VERSION' "Nginx version"

	[ -z "${SOURCE_LATEST}" ] && SOURCE_LATEST="$(docker_api_latest "${SOURCE_REPO}")"
	add_print_param "${SOURCE_LATEST}" 'SOURCE_LATEST' 'Source latest'
}

get_base_tags () {
	local extra_tags && extra_tags=("${TARGET_TAG}" "alpine${ALPINE_VERSION}")
	[[ "${ALPINE_VERSION}" != "3.12"* ]] && extra_tags+=("${NGINX_VERSION}")
	echo "${extra_tags[@]}"
}

## extra tags to add during post_push
get_manifest_tags () {
	local extra_tags && extra_tags=("$(get_base_tags)")

	[ "${NGINX_VERSION}" = "${NGINX_LATEST}" ] \
		&& [ "${ALPINE_VERSION}" = "${SOURCE_LATEST}" ] \
		&& extra_tags+=('latest')

	echo "${extra_tags[@]}"
}
