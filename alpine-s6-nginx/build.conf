# shellcheck shell=bash disable=SC2034

SOURCE_REPO="moonbuggy2000/alpine-s6"
ARCH_YAML="hooks/arch.alpine.yaml"
BUILD_BUILDX=1
NO_QEMU=1

declare -A BUILD_ARGS=( \
	[NGINX_VERSION]='Nginx version' \
	[ALPINE_VERSION]='Alpine version' \
)

declare -A CHECKOUT_DISPLAY=( \
	[ALPINE_VERSION]='Alpine version' \
	[ALPINE_LATEST]='Alpine latest' \
	[ALPINE_MINOR_LATEST]='Alpine minor latest' \
)

# return the latest Alpine version that supports the Nginx version
#
get_alpine_version() {
	case "${1}" in
		1.12*) echo '3.7' ;;
		1.14*) echo '3.9' ;;
		1.16*) echo '3.11' ;;
		1.18*) echo '3.13' ;;
		1.20*) echo '3.15' ;;
		1.22*) echo '3.17' ;;
		1.24*) echo '3.18' ;;
		*)
			>&2 printf 'Invalid Nginx version (%s). Exiting.\n' "${1}"
			exit 1
			;;
	esac
}

## run at the start of post_checkout
post_checkout_start () {
	eval_param_ifn 'SOURCE_REPO_TAGS' "docker_api_repo_tags ${SOURCE_REPO} | grep -oE '^[0-9\.]+' | sort -uV"
	eval_param_ifn 'ALPINE_LATEST' "echo '${SOURCE_REPO_TAGS}' | xargs -n1 | sed -En 's|^([0-9\.]+).*|\\\1|p' | sort -uV | tail -n1"

	# version information from DOCKER_TAG
	# full tag version:
	#		<nginx_version>-alpine<alpine_version>-<arch>
	# other accepted tags:
	#		latest
	#		<nginx_version>(-<arch>)
	#		alpine<alpine_version>(-<arch>)
	#
	case "${DOCKER_TAG}" in
		*alpine*)
			ALPINE_VERSION="$(echo ${DOCKER_TAG} | grep -oP 'alpine\K[0-9.]*')"
			;;&
		*latest*)
			ALPINE_VERSION="${ALPINE_LATEST}"
			;;&
		*alpine*|*latest*)
			NGINX_VERSION="$(alpine_package_version 'nginx' "${ALPINE_VERSION}")"
			;;
		*)
			ALPINE_VERSION="$(get_alpine_version "${DOCKER_TAG%%-*}")"
			NGINX_VERSION="$(alpine_package_version 'nginx' "${ALPINE_VERSION}")"
			;;
	esac
	add_param "${NGINX_VERSION}" 'NGINX_VERSION' "Nginx version"
	add_param "$(parse_version_minor ${NGINX_VERSION})" 'NGINX_MINOR'

	# get x.y.z full version
	add_param "$(search_repo_tags "${ALPINE_VERSION}")" 'ALPINE_VERSION'

	# get x major version
	add_param "$(parse_version_major ${ALPINE_VERSION})" 'ALPINE_MAJOR'
	add_param "$(search_repo_tags ${ALPINE_MAJOR} "${SOURCE_REPO_TAGS}")" 'ALPINE_MAJOR_LATEST'

	# get x.y minor version
	add_param "$(parse_version_minor ${ALPINE_VERSION})" 'ALPINE_MINOR'
	add_param "$(search_repo_tags ${ALPINE_MINOR} "${SOURCE_REPO_TAGS}")" 'ALPINE_MINOR_LATEST'

	TARGET_TAG="${NGINX_VERSION}-alpine${ALPINE_VERSION}"
	SOURCE_TAG="${ALPINE_VERSION}"
}

get_base_tags () {
	local base_tags && base_tags=("${TARGET_TAG}")
	if [ "${ALPINE_VERSION}" = "${ALPINE_MINOR_LATEST}" ]; then
		base_tags+=("alpine${ALPINE_MINOR}" "${NGINX_MINOR}")

		[ "x${ALPINE_MINOR}" = "x$(get_alpine_version "${NGINX_VERSION}")" ] \
			&& base_tags+=("${NGINX_VERSION}")
	fi
	echo "${base_tags[@]}"
}

get_manifest_tags () {
	local extra_tags && extra_tags=("$(get_base_tags)")
	[ "x${ALPINE_VERSION}" = "x${ALPINE_LATEST}" ] && extra_tags+=('latest')
	echo "${extra_tags[@]}"
}
